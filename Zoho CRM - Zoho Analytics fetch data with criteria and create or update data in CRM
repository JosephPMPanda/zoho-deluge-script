//generate access token
refresh_token = "...";
client_id = "...";
client_secret = "...";
url_access_token = "https://accounts.zoho.com/oauth/v2/token" + "?refresh_token=" + refresh_token + "&client_id=" + client_id + "&client_secret=" + client_secret + "&grant_type=refresh_token";
resp = invokeurl
[
	url :url_access_token
	type :POST
];
access_token = resp.get("access_token");
// get data from zoho analytics
workspace_id = "...";
view_id = "...";
org_id = "...";
//criteria: fetch records last modified within 24 hours
criteria = "%22to_integer(unix_timestamp(now()))-to_integer(unix_timestamp(%5C%22Last%20Modified%20Date%5C%22))%3C36*60*60%22";
//nonalphanumeric character must be converted to hex preceding with %
url_analytic_agencies = "https://analyticsapi.zoho.com/restapi/v2/workspaces/" + workspace_id + "/views/" + view_id + "/data?CONFIG=%7BresponseFormat:json," + "criteria:" + criteria + "%7D";
data_from_analytic = invokeurl
[
	url :url_analytic_agencies
	type :GET
	headers:{"Authorization":"Zoho-oauthtoken " + access_token,"ZANALYTICS-ORGID":org_id}
];
//push data to CRM for every 100 records
data_to_push_to_crm = {"data":List()};
data_size = 0;
temp_list = List();
for each  record in data_from_analytic.get("data")
{
	if(data_size < 100)
	{
		//data to be pushed <100
		temp = Map();
		temp.put("Account_Name",record.get("..."));
    ...
		temp_list.add(temp);
		data_size = data_size + 1;
	}
	else
	{
		//data to be pushed =100
		data_to_push_to_crm.put("data",temp_list);
		resp3 = invokeurl
		[
			url :"https://www.zohoapis.com/crm/v3/Accounts/upsert"
			type :POST
			parameters:data_to_push_to_crm.toText()
			headers:{"Authorization":"Zoho-oauthtoken " + access_token}
		];
		//reset map 
		data_to_push_to_crm.put("data",List());
		temp_list = List();
		data_size = 0;
		//push data again
		temp = Map();
		temp.put("Account_Name",record.get("..."));
		temp_list.add(temp);
		data_size = data_size + 1;
	}
}
data_to_push_to_crm.put("data",temp_list);
// push the last remaining data to CRM
info "=========\n" + data_to_push_to_crm.toText();
resp4 = invokeurl
[
	url :"https://www.zohoapis.com/crm/v3/Accounts/upsert"
	type :POST
	parameters:data_to_push_to_crm.toText()
	headers:{"Authorization":"Zoho-oauthtoken " + access_token}
];
info "resp4: " + resp4;
